services:
  litellm:
    image: ghcr.io/berriai/litellm:main-stable
    pull_policy: always
    container_name: litellm
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    volumes:
      - ./config.yml:/app/config.yml
    command:
      - "--config=/app/config.yml"
    environment:
      STORE_MODEL_IN_DB: "True"
      TZ: Asia/Tokyo
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.litellm.rule=Host(`litellm.yqyoi.dev`)"
      - "traefik.http.routers.litellm.entrypoints=websecure"
      - "traefik.http.routers.litellm.tls.certresolver=cfdns"
      - "traefik.http.routers.litellm.middlewares=tailnet-whitelist@file"
      - "traefik.http.services.litellm.loadbalancer.server.port=4000"

  postgres:
    image: postgres
    pull_policy: always
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: litellm
      POSTGRES_USER: llmproxy
      POSTGRES_PASSWORD: Critter-Factor2-Graceless
      TZ: Asia/Tokyo
    ports:
      - 127.0.0.1:5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d litellm -U llmproxy"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - ./postgres:/var/lib/postgresql/data

networks:
  default:
    name: traefik-network
    external: true
